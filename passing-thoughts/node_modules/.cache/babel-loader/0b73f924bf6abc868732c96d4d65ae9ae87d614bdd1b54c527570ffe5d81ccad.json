{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/React-2/passing-thoughts/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AddThoughtForm } from './AddThoughtForm';\nimport { Thought } from './Thought';\nimport { generateId, getNewExpirationTime } from './utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [thoughts, setThoughts] = useState([{\n    id: generateId(),\n    text: 'This is a place for your passing thoughts.',\n    expiresAt: getNewExpirationTime()\n  }, {\n    id: generateId(),\n    text: \"They'll be removed after 15 seconds.\",\n    expiresAt: getNewExpirationTime()\n  }]);\n  function addThought(thought) {\n    setThoughts(prev => [thought, ...prev]);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Passing Thoughts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(AddThoughtForm, {\n        addThought: addThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"thoughts\",\n        children: thoughts.map(thought => /*#__PURE__*/_jsxDEV(Thought, {\n          thought: thought\n        }, thought.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/8ZQvCc8o/XgE5WRksv2Nwqc5qo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","AddThoughtForm","Thought","generateId","getNewExpirationTime","jsxDEV","_jsxDEV","App","_s","thoughts","setThoughts","id","text","expiresAt","addThought","thought","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/home/ec2-user/environment/React-2/passing-thoughts/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AddThoughtForm } from './AddThoughtForm';\nimport { Thought } from './Thought';\nimport { generateId, getNewExpirationTime } from './utilities';\n\nexport default function App() {\n  const [thoughts, setThoughts] = useState([\n    {\n      id: generateId(),\n      text: 'This is a place for your passing thoughts.',\n      expiresAt: getNewExpirationTime(),\n    },\n    {\n      id: generateId(),\n      text: \"They'll be removed after 15 seconds.\",\n      expiresAt: getNewExpirationTime(),\n    },\n  ]);\n\n  function addThought(thought){\n    setThoughts((prev) => [thought, ...prev]);\n  };\n  \n  \n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Passing Thoughts</h1>\n      </header>\n      <main>\n        <AddThoughtForm addThought={addThought} />\n        <ul className=\"thoughts\">\n          {thoughts.map((thought) => (\n            <Thought key={thought.id} thought={thought} />\n          ))}\n        </ul>\n      </main>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,UAAU,EAAEC,oBAAoB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CACvC;IACEY,EAAE,EAAER,UAAU,CAAC,CAAC;IAChBS,IAAI,EAAE,4CAA4C;IAClDC,SAAS,EAAET,oBAAoB,CAAC;EAClC,CAAC,EACD;IACEO,EAAE,EAAER,UAAU,CAAC,CAAC;IAChBS,IAAI,EAAE,sCAAsC;IAC5CC,SAAS,EAAET,oBAAoB,CAAC;EAClC,CAAC,CACF,CAAC;EAEF,SAASU,UAAUA,CAACC,OAAO,EAAC;IAC1BL,WAAW,CAAEM,IAAI,IAAK,CAACD,OAAO,EAAE,GAAGC,IAAI,CAAC,CAAC;EAC3C;EAAC;EAGD,oBACEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA;MAAAY,QAAA,eACEZ,OAAA;QAAAY,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACThB,OAAA;MAAAY,QAAA,gBACEZ,OAAA,CAACL,cAAc;QAACa,UAAU,EAAEA;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1ChB,OAAA;QAAIW,SAAS,EAAC,UAAU;QAAAC,QAAA,EACrBT,QAAQ,CAACc,GAAG,CAAER,OAAO,iBACpBT,OAAA,CAACJ,OAAO;UAAkBa,OAAO,EAAEA;QAAQ,GAA7BA,OAAO,CAACJ,EAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CAC9C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACd,EAAA,CAlCuBD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}